---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/airports":
    get:
      summary: Obtener los aeropuertos
      tags:
      - Endpoints de Aeropuertos
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Retorna el listado de aeropuertos con éxito
        '401':
          description: Error en validación de Token
    post:
      summary: Registrar un aeropuerto
      tags:
      - Endpoints de Aeropuertos
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: Registra un nuevo vuelo con éxito
        '401':
          description: Error en validación de Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                city:
                  type: string
                  example: Santiago
                name:
                  type: string
                  example: Arturo Merino Benitez International Airport
              required:
              - city
              - name
  "/airports/{id}":
    get:
      summary: Obtener un aeropuerto
      tags:
      - Endpoints de Aeropuertos
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
      responses:
        '200':
          description: Retorna el aeropuerto con éxito
        '404':
          description: Aeropuerto no encontrado
        '401':
          description: Error en validación de Token
    patch:
      summary: Modificar un aeropuerto
      tags:
      - Endpoints de Aeropuertos
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
      responses:
        '202':
          description: Modifica al aeropuerto con éxito
        '404':
          description: Vuelo no encontrado
        '401':
          description: Error en validación de Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                city:
                  type: string
                  example: SCL-LIM
                name:
                  type: string
                  example: '2020-01-01'
  "/authenticate":
    post:
      summary: Tries to Log In
      tags:
      - Authentication Endpoints
      parameters: []
      responses:
        '200':
          description: Successful log in
        '401':
          description: Log in failed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: balamos@user.cl
                password:
                  type: string
                  example: benja
              required:
              - username
              - password
  "/flights":
    get:
      summary: Obtener los vuelos
      tags:
      - Endpoints de Vuelos
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Retorna el listado de vuelos con éxito
        '401':
          description: Error en validación de Token
    post:
      summary: Registrar un vuelo
      tags:
      - Endpoints de Vuelos
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: Registra un nuevo vuelo con éxito
        '401':
          description: Error en validación de Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: SCL-LIM
                date:
                  type: string
                  example: '2020-01-01'
                arrival_id:
                  type: string
                  example: 1
                departure_id:
                  type: string
                  example: 2
              required:
              - code
              - date
              - arrival_id
              - departure_id
  "/flights/{id}":
    get:
      summary: Obtener un vuelo
      tags:
      - Endpoints de Vuelos
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
      responses:
        '200':
          description: Retorna el vuelo con éxito
        '404':
          description: Vuelo no encontrado
        '401':
          description: Error en validación de Token
    patch:
      summary: Modificar un vuelo
      tags:
      - Endpoints de Vuelos
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
      responses:
        '202':
          description: Modifica al vuelo con éxito
        '404':
          description: Vuelo no encontrado
        '401':
          description: Error en validación de Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: SCL-LIM
                date:
                  type: string
                  example: '2020-01-01'
                arrival_id:
                  type: string
                  example: 1
                departure_id:
                  type: string
                  example: 2
    delete:
      summary: Eliminar un vuelo
      tags:
      - Endpoints de Vuelos
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
      responses:
        '202':
          description: Elimina el vuelo con éxito
        '404':
          description: Vuelo no encontrado
        '401':
          description: Error en validación de Token
  "/flights/{flight_id}/seats":
    get:
      summary: Obtener los asientos del asiento
      tags:
      - Endpoints de Asientos
      parameters:
      - name: flight_id
        in: path
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Retorna el listado de asientos con éxito
        '404':
          description: Vuelo no encontrado
        '401':
          description: Error en validación de Token
    post:
      summary: Registrar un asiento
      tags:
      - Endpoints de Asientos
      parameters:
      - name: flight_id
        in: path
        required: true
      security:
      - bearerAuth: []
      responses:
        '201':
          description: Registra un nuevo asiento con éxito
        '404':
          description: Vuelo no encontrado
        '401':
          description: Error en validación de Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 2
                flight_id:
                  type: integer
                  example: 2
                used:
                  type: string
                  example: true
                passenger_name:
                  type: string
                  example: Raimundo
                seat_code:
                  type: strings
                  example: A1
              required:
              - user_id
              - flight_id
              - used
              - passenger_name
              - seat_code
  "/flights/{flight_id}/seats/{id}/":
    get:
      summary: Obtener un asiento del vuelo
      tags:
      - Endpoints de Asientos
      parameters:
      - name: id
        in: path
        required: true
      - name: flight_id
        in: path
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Retorna la información del asiento con éxito
        '404':
          description: Asiento no encontrado
        '401':
          description: Error en validación de Token
    patch:
      summary: Editar un asiento del vuelo
      tags:
      - Endpoints de Asientos
      parameters:
      - name: flight_id
        in: path
        required: true
      - name: id
        in: path
        required: true
      security:
      - bearerAuth: []
      responses:
        '202':
          description: Registra un nuevo asiento con éxito
        '404':
          description: Asiento no encontrado
        '401':
          description: Error en validación de Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 2
                flight_id:
                  type: integer
                  example: 2
                used:
                  type: boolean
                  example: true
                passenger_name:
                  type: string
                  example: Raimundo
                seat_code:
                  type: strings
                  example: A1
  "/users":
    get:
      summary: Obtener los usuarios
      tags:
      - Endpoints de Usuarios
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Retorna el listado de usuarios con éxito
        '401':
          description: Error en validación de Token
    post:
      summary: Registrar un usuario
      tags:
      - Endpoints de Usuarios
      parameters: []
      responses:
        '201':
          description: Registra un nuevo usuario con éxito
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John
                lastname:
                  type: string
                  example: Doe
                username:
                  type: string
                  example: Jonh@uc.cl
                password:
                  type: string
                  example: '123456'
                role:
                  type: integer
                  example: 2
              required:
              - name
              - last_name
              - username
              - password
              - role
  "/users/{id}":
    get:
      summary: Obtener un usuarios
      tags:
      - Endpoints de Usuarios
      parameters:
      - name: id
        in: path
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Retorna el usuario con éxito
        '404':
          description: Usuario no encontrado
        '401':
          description: Error en validación de Token
    patch:
      summary: Modificar un usuario
      tags:
      - Endpoints de Usuarios
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
      responses:
        '202':
          description: Modifica al usuario con éxito
        '404':
          description: Usuario no encontrado
        '401':
          description: Error en validación de Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John2
                lastname:
                  type: string
                  example: Doe2
                username:
                  type: string
                  example: Jonh2@uc.cl
                password:
                  type: string
                  example: '12345622222'
                role:
                  type: integer
                  example: 2
servers:
- url: https://easy-flight-api.herokuapp.com/
- url: http://{otherHost}
  variables:
    otherHost:
      default: 127.0.0.1:3000/
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      name: Authorization
